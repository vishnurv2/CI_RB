=begin
#Policy API

#This API manages interactions with the policy management system.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.9

=end

require 'uri'

module PolicyAPI
  class ReportsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # To get credit report details
    # @param policy_activity_id policyActivityId
    # @param [Hash] opts the optional parameters
    # @return [Array<CreditReportDetails>]
    def get_credit_report_details(policy_activity_id, opts = {})
      data, _status_code, _headers = get_credit_report_details_with_http_info(policy_activity_id, opts)
      data
    end

    # To get credit report details
    # @param policy_activity_id policyActivityId
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<CreditReportDetails>, Fixnum, Hash)>] Array<CreditReportDetails> data, response status code and response headers
    def get_credit_report_details_with_http_info(policy_activity_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ReportsApi.get_credit_report_details ...'
      end
      # verify the required parameter 'policy_activity_id' is set
      if @api_client.config.client_side_validation && policy_activity_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_activity_id' when calling ReportsApi.get_credit_report_details"
      end
      # resource path
      local_var_path = '/v1/policy_activities/{policyActivityId}/reports/credit/details'.sub('{' + 'policyActivityId' + '}', policy_activity_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<CreditReportDetails>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReportsApi#get_credit_report_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # To get credit report summary
    # @param policy_activity_id policyActivityId
    # @param [Hash] opts the optional parameters
    # @return [Array<CreditReportSummary>]
    def get_credit_report_summary(policy_activity_id, opts = {})
      data, _status_code, _headers = get_credit_report_summary_with_http_info(policy_activity_id, opts)
      data
    end

    # To get credit report summary
    # @param policy_activity_id policyActivityId
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<CreditReportSummary>, Fixnum, Hash)>] Array<CreditReportSummary> data, response status code and response headers
    def get_credit_report_summary_with_http_info(policy_activity_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ReportsApi.get_credit_report_summary ...'
      end
      # verify the required parameter 'policy_activity_id' is set
      if @api_client.config.client_side_validation && policy_activity_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_activity_id' when calling ReportsApi.get_credit_report_summary"
      end
      # resource path
      local_var_path = '/v1/policy_activities/{policyActivityId}/reports/credit/summary'.sub('{' + 'policyActivityId' + '}', policy_activity_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<CreditReportSummary>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReportsApi#get_credit_report_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # To get data prefill report details
    # @param policy_activity_id policyActivityId
    # @param [Hash] opts the optional parameters
    # @return [DataPrefillDetails]
    def get_data_prefill_report(policy_activity_id, opts = {})
      data, _status_code, _headers = get_data_prefill_report_with_http_info(policy_activity_id, opts)
      data
    end

    # To get data prefill report details
    # @param policy_activity_id policyActivityId
    # @param [Hash] opts the optional parameters
    # @return [Array<(DataPrefillDetails, Fixnum, Hash)>] DataPrefillDetails data, response status code and response headers
    def get_data_prefill_report_with_http_info(policy_activity_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ReportsApi.get_data_prefill_report ...'
      end
      # verify the required parameter 'policy_activity_id' is set
      if @api_client.config.client_side_validation && policy_activity_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_activity_id' when calling ReportsApi.get_data_prefill_report"
      end
      # resource path
      local_var_path = '/v1/policy_activities/{policyActivityId}/reports/dataprefill_auto'.sub('{' + 'policyActivityId' + '}', policy_activity_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DataPrefillDetails')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReportsApi#get_data_prefill_report\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
